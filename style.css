:root {
  color-scheme: dark light;

  --space-xxs: .25rem;
  --space-xs:  .5rem;
  --space-sm:  1rem;
  --space-md:  1.5rem;
  --space-lg:  2rem;
  --space-xl:  3rem;
  --space-xxl: 6rem;

  /* destructure brand channels */
  --hue: 200;
  --saturation: 100%;
  --lightness: 50%;
  
  /* build colors with props */
  --brand: hsl(
    var(--hue) 
    calc(var(--saturation) / 2)
    var(--lightness) 
  );
  
  --text1: hsl(var(--hue) 15% 85%);
  --text2: hsl(var(--hue) 15% 65%);

  --surface1: hsl(var(--hue) 10% 10%);
  --surface2: hsl(var(--hue) 10% 15%);
  --surface3: hsl(var(--hue) 5%  20%);
  --surface4: hsl(var(--hue) 5% 25%);
}

@media (prefers-color-scheme: light) {
  :root {
    --brand: hsl(
      var(--hue) 
      var(--saturation)
      var(--lightness) 
    );

    /* very dark brand blue */
    --text1: hsl(
      var(--hue) 
      var(--saturation)
      10% /* lower is darker */
    );

    --text2: hsl(
      var(--hue) 
      calc(var(--saturation) / 2)
      30%
    );
    
    /* very bright brand white */
    --surface1: hsl(
      var(--hue) 
      calc(var(--saturation) / 6) 
      90% /* higher is lighter */
    );

    --surface2: hsl(
      var(--hue) 
      calc(var(--saturation) / 8) 
      99% 
    );

    --surface3: hsl(
      var(--hue) 
      calc(var(--saturation) / 8) 
      96% 
    );

    --surface4: hsl(
      var(--hue) 
      calc(var(--saturation) / 8) 
      85% 
    );
  }
}

* {
  box-sizing: border-box;
  margin: 0;
}

html {
  block-size: 100%;
}

body {
  min-block-size: 100%;
  font-family: system-ui, sans-serif;

  padding-block-start: var(--space-xs);
  padding-block-end: var(--space-xs);
  background: var(--surface1);
  color: var(--text1);
}

h1,h2,h3 { 
  font-weight: 500;
}

main {
  display: grid;
  gap: var(--space-xl);
  place-content: center;
  padding: var(--space-sm);
}

@media (min-width: 540px) {
  main {
    padding: var(--space-lg);
  }
}

@media (min-width: 800px) {
  main {
    padding: var(--space-xl);
  }
}

form {
  max-inline-size: 89vw;
  display: grid;
  gap: var(--space-xl) var(--space-xxl);
  --repeat: auto-fit;
  grid-template-columns: 
    repeat(var(--repeat), minmax(min(10ch, 100%), 35ch));
  align-items: flex-start;
}

@media (orientation: landscape) and (min-width: 640px) {
  form {
    --repeat: 2;
  }
}

section {
  display: grid;
  gap: var(--space-md);
}

header {
  display: grid;
  gap: var(--space-xxs);
}

fieldset {
  border: 1px solid var(--surface4);
  background: var(--surface4);
  padding: 0;
  display: grid;
  gap: 1px;
  border-radius: var(--space-sm);
  overflow: hidden;
  transition: box-shadow .3s ease;
}

fieldset:focus-within {
  box-shadow: 0 5px 20px -10px hsl(0 0% 0% / 50%);
}

.fieldset-item {
  background: var(--surface3);
  transition: background .2s ease;

  display: grid;
  grid-template-columns: var(--space-lg) 1fr;
  gap: var(--space-md);

  padding: var(--space-sm) var(--space-md);
}

@media (min-width: 540px) {
  .fieldset-item {
    grid-template-columns: var(--space-xxl) 1fr;
    gap: var(--space-xs);
    padding-block: var(--space-md);
    padding-inline: 0 var(--space-xl);
  }
}

.fieldset-item:focus-within {
  background: var(--surface2);
}

.fieldset-item > :is(picture, input[type="checkbox"]) {
  place-self: center;
}

.fieldset-item > picture {
  block-size: var(--space-xl);
  inline-size: var(--space-xl);
  clip-path: circle(40%);
  display: inline-grid;
  place-content: center;
  background: var(--surface4);
}

.fieldset-item:focus-within picture {
  clip-path: circle(50%);
}

@media (prefers-reduced-motion: no-preference) {
  .fieldset-item > picture {
    transition: clip-path .3s ease;
  }
}

.fieldset-item svg {
  fill: var(--text2);
  block-size: var(--space-md);
}

.fieldset-item:focus-within svg {
  fill: var(--brand);
}

.sm-stack {
  display: grid;
  gap: var(--space-xs);
}

input[type="range"] {
  display: block;
  inline-size: 100%;
}

input[type="checkbox"] {
  inline-size: var(--space-sm);
  block-size: var(--space-sm);
}

input {
  outline-offset: 5px;
}

small {
  color: var(--text2);
  line-height: 1.5;
}

.github-corner {
  color: var(--surface1);
  fill: var(--surface3); 
}
